# NOTE: do not rename file to nginx.conf unless planning to change more
# configuration to point to this config in docker image. Using default.conf
# was convenient.

upstream php {
  server unix:/tmp/php-cgi.socket;
  server wordpress:9000;
}


server {
  listen   80;  ## listen for ipv4; this line is default and implied
	listen   [::]:80;  ## listen for ipv6
  listen   443 ssl;
  listen   [::]:443 ssl;
  server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};

  # WARNING CANNOT HAVE VARIABLES IN NEXT TWO LINES
  ssl_certificate /etc/nginx/certs/host.docker.internal.pem;
  ssl_certificate_key /etc/nginx/certs/host.docker.internal-key.pem;

  index index.php index.html index.htm;

  root /var/www/html;

  # TODO read up on this - Not sure what this is yet
  location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/html;
  }

  location / {
    try_files $uri $uri/ /index.php$is_args$args;
  }

  location ~ \.php$ {
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass wordpress:9000;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  # Deny Apache any robot/analytics access to apache files
  location ~ /\.ht {
    deny all;
  }

  location = /favicon.ico {
    log_not_found off; access_log off;
  }

  location = /robots.txt {
    log_not_found off; access_log off; allow all;
  }

  location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
    expires max;
    log_not_found off;
  }
}
